{
  "$schema": "../../../../../discovery/schemas/contract.v2.schema.json",
  "description": "This contract is the router for the bridge proofs verification. It stores the mapping between the identifier of the bridge circuit and the address of the on-chain verifier contract.",
  "fields": {
    "oldVerifier": {
      "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This verifier route was frozen on 2024-09-04.",
      "handler": {
        "type": "call",
        "method": "function routes(bytes4) view returns (address verifier, bool frozen)",
        "args": [
          // first 4 bytes of the blobstream proof are used as identifier
          "0xc430ff7f"
        ]
      }
    },
    "oldVerifier2": {
      "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2024-09-21.",
      "handler": {
        "type": "call",
        "method": "function routes(bytes4) view returns (address verifier, bool frozen)",
        "args": [
          // first 4 bytes of the blobstream proof are used as identifier
          "0xc865c1b6"
        ]
      }
    },
    "oldVerifier3": {
      "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2024-11-01.",
      "handler": {
        "type": "call",
        "method": "function routes(bytes4) view returns (address prover, bool frozen)",
        "args": [
          // first 4 bytes of the blobstream proof are used as identifier
          "0x09069090"
        ]
      }
    },
    "oldVerifier4": {
      "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2024-11-08.",
      "handler": {
        "type": "call",
        "method": "function routes(bytes4) view returns (address verifier, bool frozen)",
        "args": [
          // first 4 bytes of the blobstream proof are used as identifier
          "0x4aca240a"
        ]
      }
    },
    "verifier": {
      "description": "The prover contract address for SP1, and whether it is frozen (true if frozen).",
      "target": {
        "permissions": [{
          "type": "configure",
          "description": "Verifier contract for the header range [latestBlock, targetBlock] proof. The proof is generated by an off-chain prover and submitted by a relayer."
        }]
      },
      "handler": {
        "type": "call",
        "method": "function routes(bytes4) view returns (address prover, bool frozen)",
        "args": [
          // first 4 bytes of the blobstream proof are used as identifier
          "0x54bdcae3"
        ]
      }
    },
    "owner": {
      "target": {
        "permissions": [
          {
            "type": "configure",
            "description": "admin of the contract. As the manager of router for proof verification, it holds the power to affect the liveness and safety of the bridge."
          }
        ]
      }
    }
  }
}
